
# Categories
#   - viewer
#   - generator
#   - parser
#   - editor
#   - validator
#   - converter
#   - applications
#   - storage

# Interfaces
#   - cli
#   - gui
#   - both

# Types
#   - app
#   - lib
#   - both

# Don't forget to add software alphabetically!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


- name: cjseq
  webpage: https://github.com/cityjson/cjseq
  description: Conversion CityJSON <=> CityJSONSeq
  foss: true
  category: 
    - converter
  interface: cli
  type: app

- name: cjdb
  webpage: https://github.com/cityjson/cjdb
  description: cjdb is a tool enabling CityJSON integration with a PostgreSQL database
  foss: true
  category: 
    - storage
  interface: cli
  type: app  

- name: NSGI CRS API
  webpage: https://api.transformation.nsgi.nl/v2/openapi
  description: "Performs coordinate transformations on GeoJSON and CityJSON files using the official RDNAPTRANSâ„¢ transformation procedure and other transformations defined or recommended by [NSGI](https://www.nsgi.nl)"
  foss: true
  category: 
    - converter
  interface: cli
  type: lib

- name: tyler
  webpage: https://github.com/3DGI/tyler
  description: Creates [3D tiles](https://docs.ogc.org/cs/22-025r4/22-025r4.html) from CityJSON
  foss: true
  category: 
    - converter
    - viewer
  interface: cli
  type: app

- name: cityjson2jsonfg
  webpage: https://github.com/3DGI/cityjson2jsonfg
  description: A command line tool for converting CityJSON files to [JSON-FG format](https://github.com/opengeospatial/ogc-feat-geo-json)
  foss: true
  category: 
    - converter
  interface: cli
  type: app

- name: 3D City DB
  webpage: http://www.3dcitydb.org
  description: Free geo-database to store, represent, and manage virtual 3D city models on top of a standard spatial relational database (PostGIS and Oracle)
  foss: true
  category: 
    - storage
  interface: gui
  type: app

- name: 3dfier
  webpage: https://github.com/tudelft3d/3dfier
  description: Takes 2D GIS datasets and "3dfies" them by lifting each polygon to its height (obtained with LiDAR). Outputs CityJSON, CityGML, and OBJ
  foss: true
  category: 
    - generator
  interface: cli
  type: lib

- name: Autoconverter
  webpage: https://www.automapki.com/products/autoconverter.html
  description: Import, export and convert many 3D mesh and solid file formats
  foss: false
  category: 
    - viewer
    - converter
  interface: gui
  type: app  

- name: azul
  webpage: https://itunes.apple.com/nl/app/azul/id1173239678?mt=12
  description: A native and fast CityJSON viewer for macOS
  foss: true
  category: 
    - viewer
  interface: gui
  type: app

- name: citygml4j
  webpage: https://github.com/citygml4j
  description: Open source Java class library and API 
  foss: true
  category: 
    - parser
  interface: cli
  type: lib

- name: citygml-tools
  webpage: https://github.com/citygml4j/citygml-tools
  description: CLI created with citygml4j, it allows us to convert CityJSON <-> CityGML in one-click 
  foss: true
  category: 
    - converter
  interface: cli
  type: both

- name: cjio
  webpage: https://github.com/cityjson/cjio
  description: Python CLI to process and manipulate CityJSON files. Used as the 'official' validator for CityJSON files
  foss: true
  category: 
    - validator
    - converter
    - parser
  interface: cli
  type: both

- name: cjval
  webpage: https://validator.cityjson.org
  description: Used as the official validator for CityJSON files
  foss: true
  category: 
    - validator
  interface: both
  type: both  

- name: FME
  webpage: https://www.safe.com/fme/
  description: FME 2020+ has built-in capabilities to read/write CityJSON. And its viewer is the only one supporting textures (at this moment)
  foss: false
  category: 
    - viewer
    - generator
    - converter
  interface: gui
  type: app

- name: Measur3D
  webpage: https://ganys.github.io/Measur3D/
  description: A light and compact CityJSON management tool. This tool is built as a high-level MERN application. It therefore allows developing with a single language in both server and client side.
  foss: true
  category: 
    - storage
    - viewer
  interface: gui
  type: app

- name: ninja 
  webpage: https://ninja.cityjson.org/
  description: Official CityJSON viewer, it supports holes and the ability to edit, all within the ease of your browser
  foss: true
  category: 
    - viewer
    - editor
  interface: gui
  type: app

- name: ParaView reader
  webpage: https://github.com/mdjong1/CityJSON-Reader-ParaView
  description: A plugin that allows you to read CityJSON files directly into ParaView
  foss: true
  category: 
    - viewer
    - applications
  interface: gui
  type: app  

- name: RevitCityJSONImporter
  webpage: https://github.com/tudelft3d/cityjsonToRevit
  description: A plugin for Revit to import and reproject CityJSON's geometries and attributes
  foss: true
  category: 
    - editor
    - converter
  interface: gui
  type: app 
  
- name: RhinoCity
  webpage: https://rhinoterrain.com/en/rhinocity.html
  description: A plugin for Rhino to produce, edit, analyse, and texture 3D data. Reads and writes CityJSON
  foss: false
  category: 
    - generator
    - editor
    - converter
  interface: gui
  type: app  

- name: RhinoCityJSONReader
  webpage: https://github.com/cityjson/RhinoCityJSON
  description: A Rhino/Grasshopper plugin, semantics is supported
  foss: true
  category: 
    - editor
    - converter
  interface: gui
  type: app  

- name: QGIS plugin
  webpage: https://github.com/tudelft3d/cityjson-qgis-plugin
  description: A plugin that supports the loading of CityJSON datasets in QGIS3; these can be queried like any other layers in QGIS
  foss: true
  category: 
    - viewer
  interface: gui
  type: app

- name: Schema Store
  webpage: https://www.schemastore.org/json/
  description: The JSON API contains a list of JSON Schema files for known JSON file formats. Each schema file can be used in tooling such as command line validators, editor auto-completion etc.
  foss: true
  category: 
    - parser
  interface: cli
  type: lib

- name: Up3date
  webpage: https://github.com/cityjson/Blender-CityJSON-Plugin
  description: Plugin to open/import directly CityJSON models in Blender, attributes and semantics are kept
  foss: true
  category: 
    - viewer
    - applications
    - editor
  interface: gui
  type: app

- name: val3dity
  webpage: http://github.com/tudelft3d/val3dity/
  description: Validation of 3D GML primitives according to the international standard ISO19107
  foss: true
  category: 
    - validator
  interface: cli
  type: app

- name: IFCCityJSON
  webpage: https://github.com/IfcOpenShell/IfcOpenShell/tree/v0.6.0/src/ifccityjson
  description: Convert CityJSON files to IFC
  foss: true
  category:
    - converter
  interface: cli
  type: app

- name: xeokit
  webpage: https://www.notion.so/Viewing-a-CityJSON-Model-with-XKTLoaderPlugin-d49f636c2e31470dbda5c82716c0e3d2
  description: Open-source web programming toolkit, offers a converter from CityJSON to their own format
  foss: true
  category: 
    - viewer
  interface: gui
  type: app  

- name: C# library
  webpage: https://github.com/bertt/cityjson
  description: Open source C# library to read/write CityJSON
  foss: true
  category: 
    - parser
  interface: cli
  type: lib
